<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.link.blog.dao.ArticleDao">

    <resultMap id="articleBackResultMap" type="com.link.blog.model.vo.ArticleBackVO">

    </resultMap>


    <select id="listArticleStatistics" resultType="com.link.blog.model.dto.ArticleStatisticsDTO">
        select DATE_FORMAT(create_time, '%Y-%m-%d') as `date`, count(1) as `count`
        from tb_article
        where create_time <![CDATA[ > ]]> #{startTime}
          and create_time <![CDATA[ <= ]]> #{endTime}
        group by `date`
        order by `date` desc
    </select>

    <select id="countArticleBack" resultType="java.lang.Integer">
        select count(distinct a.id)
        from tb_article a left join tb_article_tag `at`
        on a.id = `at`.article_id
        <where>
            is_delete = #{condition.isDelete}
            <if test="condition.keywords != null">
                and article_title like concat('%', #{condition.keywords}, '%')
            </if>
            <if test="condition.status != null">
                and `status` = #{condition.status}
            </if>
            <if test="condition.type != null">
                and `type` = #{condition.type}
            </if>
            <if test="condition.categoryId != null">
                and category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                and `at`.tag_id = #{condition.tagId}
            </if>
        </where>
    </select>

    <select id="listArticleBack" resultType="articleBackResultMap">
        select
        a.id,
        article_cover,
        article_title,
        type,
        is_top,
        a.is_delete,
        a.status,
        a.create_time,
        category_name,
        t.id AS tag_id,
        t.tag_name
        from
        (
        select id, article_cover, article_title, `type`, is_top, is_delete, status, create_time, category_id
        from tb_article
        <where>
            is_delete = #{condition.isDelete}
            <if test="condition.keywords != null">
                and article_title like concat('%', #{condition.keywords}, '%')
            </if>
            <if test="condition.status != null">
                and `status` = #{condition.status}
            </if>
            <if test="condition.type != null">
                and `type` = #{condition.type}
            </if>
            <if test="condition.categoryId != null">
                and category_id = #{condition.categoryId}
            </if>
            <if test="condition.tagId != null">
                and id in (select article_id from tb_article_tag where tag_id = #{condition.tagId})
            </if>
        </where>
        order by
        is_top desc,
        id desc
        limit #{current}, #{size}
        ) a
        left join tb_category c on a.category_id = c.id
        left join tb_article_tag tat on a.id = tat.article_id
        left join tb_tag t on t.id = tat.tag_id
        order by
        is_top desc,
        a.id desc
    </select>
</mapper>
